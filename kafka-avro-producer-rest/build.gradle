import org.apache.avro.tool.SpecificCompilerTool

buildscript {
    dependencies {
        // Add the Avro code generation to the build dependencies so that it can be used in a Gradle task.
        classpath group: 'org.apache.avro', name: 'avro-tools', version: '1.11.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group 'org.fedous'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven/' }
}

tasks.register("prepareKotlinBuildScriptModel"){}

def avroSchemasDir = "src/main/resources/avscschemas"
def avroCodeGenerationDir = "src/main/java"

tasks.register('avroCodeGeneration') {
    // Define the task inputs and outputs for the Gradle up-to-date checks.
    inputs.dir(avroSchemasDir)
    outputs.dir(avroCodeGenerationDir)
    // The Avro code generation logs to the standard streams. Redirect the standard streams to the Gradle log.
    logging.captureStandardOutput(LogLevel.INFO)
    logging.captureStandardError(LogLevel.ERROR)
    doLast {
        // Run the Avro code generation.
        new SpecificCompilerTool().run(System.in, System.out, System.err, List.of(
                "-encoding", "UTF-8",
                "-string",
                "-fieldVisibility", "private",
                //"-noSetters",
                "schema", "$projectDir/$avroSchemasDir".toString(), "$projectDir/$avroCodeGenerationDir".toString()
        ))
    }
}

tasks.withType(JavaCompile).configureEach {
    // Make Java compilation tasks depend on the Avro code generation task.
    dependsOn('avroCodeGeneration')
}


dependencies {

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka:3.1.1'
    implementation 'io.confluent:kafka-avro-serializer:7.5.1'
    implementation 'io.confluent:kafka-schema-registry-client:5.4.3'

    // Avro
    implementation 'org.apache.avro:avro:1.11.2'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.2.RELEASE'

    // Lombok
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

